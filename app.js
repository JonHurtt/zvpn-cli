var pjson = require('./package.json');
var newline = "\n";
var spacer = "\n#++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n";



console.log(spacer);
console.log(pjson.name + "- v"+pjson.version);
console.log(pjson.homepage);
console.log(spacer);

function getCLI(gateway, client_name, password, f_gateway){
	var cli;
	console.log(spacer);
	console.log("starting getCLI");
	console.log("Variables {gateway: " + gateway + ", client_name: " + client_name + ", password: " + password + ", f_gateway: "+f_gateway+"}");
	
	cli = spacer;	
	cli += "#Start of Configuration for "+ client_name ;
	cli += spacer;
	
	/*
	cli += "user-profile Mgmt-User qos-policy def-user-qos vlan-id 99 attribute 99" ;
	cli += newline;
	cli += "user-profile Public-VPN-User qos-policy def-user-qos vlan-id 100 attribute 100";
	cli += newline;
	*/
	
	cli += "user-profile Public-VPN-User security deny ipv6";
	cli += newline;

	cli += "vpn l2l-access-list VPN-ACL src-ip 192.168.47.0/24 dst-ip 0.0.0.0/0";
	cli += newline;
	
	cli += "vpn l2l-access-list VPN-ACL src-ip 10.0.0.0/16 dst-ip 0.0.0.0/0";
	cli += newline;	
	
	cli += getVPN(gateway, client_name, password, false);
	cli += newline;	
	
	if( typeof f_gateway !== 'undefined'){
		cli += getVPN(f_gateway, client_name, password, true);	
	}
	cli += spacer;
	cli += "#End of Configuration for "+ client_name ;
	cli += spacer;
	console.log("finished getCLI");
	console.log(spacer);

	
	return cli;
	
}//end_getCLI()

function getVPN(gateway, client_name, password, failover){
	var cli_vpn;
	
	if(failover === true ){
		var VPN = "VPN-2"
	}else{
		var VPN = "VPN-1"
	}
	
	console.log("starting getVPN("+gateway+", "+client_name+", "+password+", "+failover+")");

	cli_vpn = "vpn client-ipsec-tunnel "+VPN+" vpn-mode layer-3 lan-to-lan-vpn";
	cli_vpn += newline;	
	cli_vpn += "vpn ipsec-tunnel "+VPN+" gateway "+gateway+" client-name "+client_name+"@bankofamerica.com password "+password+"";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase1 auth-method psk";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase1 psk "+password+" ";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" dpd idle-interval 5 retry 5 retry-interval 5";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase1 encryption-algorithm aes128";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase1 lifetime 86400";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase2 encryption-algorithm aes128";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase2 hash md5";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase2 lifetime 28800";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" ike phase1 mode aggressive";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" local-ike-id ufqdn "+client_name+"@bankofamerica.com";
	cli_vpn += newline;
	cli_vpn += "vpn ipsec-tunnel "+VPN+" l2l-access-list VPN-ACL";
	cli_vpn += newline;

	if(failover === true ){
		cli_vpn += "vpn tunnel-policy ZVPN client ipsec-tunnel "+VPN+ " ";
	}else{
		cli_vpn += "vpn tunnel-policy ZVPN client ipsec-tunnel "+VPN+" primary";
	}

	console.log("finished getVPN");

	return cli_vpn;

	
}

function generate_file(gateway, client_name, password, f_gateway){
	var output = "";
	var filename = "s-cli-"+client_name + ".txt"
	
	console.log("Generating CLIs...");
	output = spacer;	
	output += "#Generated by " +	pjson.name + "- v"+pjson.version;
	output += newline;
	output += "#Readme found here " +	pjson.homepage;
	output += newline;
	output += "#filename: "+filename;
	output += newline;
	output += "#date: "+new Date().toString();		
	output += spacer;
	
	output +=getCLI(gateway, client_name, password, f_gateway);
	console.log("Generating "+filename+"...");
	
	var fs = require('fs');
	fs.writeFile(filename, output, function(err) {
	    if(err) {
	        return console.log(err);
	    }
	
	    console.log("The file was saved!");
	    console.log("Ending program </end>");
		console.log(spacer);

	}); 
}


//console.log(getCLI("[GATEWAY]", "[CLIENT_NAME]", "[PASSWORD]","[FAILOVER_GATEWAY]" ));
//console.log(getCLI("[GATEWAY]", "[CLIENT_NAME]", "[PASSWORD]" ));
generate_file("[GATEWAY]", "zvpn-br-scli", "[PASSWORD]","[FAILOVER_GATEWAY]" )




